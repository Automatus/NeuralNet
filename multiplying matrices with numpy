import numpy as np

# this is not a neural network, this code is just to see the difference between using * and numpy dot

a = np.zeros((2, 2))
a[1] = 2
a[0] = 1
print("a =", a)

b = np.zeros((2, 2))
b[1] = 3
b[0] = 1
print("\nb =", b)

print("\na[0, :] dot b =", a[0, :].dot(b))
print("\na dot b =", a.dot(b))
print("\na * b =", a*b)
print("\na[0, :] * b =", a[0, :] * b)

c = np.zeros((2, 2, 2))
c[1] = 2
c[0] = 1
print("\nc =", c)

d = np.zeros((2, 2, 2))
d[1] = 3
d[0] = 1
print("\nd =", d)


print("\nc dot d =", c.dot(d))
print("\nc * d =", c*d)
print("\nc[0, :] * d =", c[0, :] * d)
print("\nc[0, :] dot d =", c[0, :].dot(d[0, :]))
